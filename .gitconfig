[user]
    name = Tyler
    email = 26290074+tylersayshi@users.noreply.github.com
[alias]
    a = add
    st = status
    c = commit
    cm = commit -m
    cmn = "!f(){ git commit -m \"$1\" --no-verify; }; f"
    ca = commit --amend
    cs = commit --no-verify -am "save"
    caa = commit -a --amend -C HEAD
    caan = commit -a --amend -C HEAD --no-verify
    co = checkout
    cob = checkout -b
    com = !git checkout $(git main)
    rb = rebase
    rbi = "!f(){ git rebase -i HEAD~$1; }; f"
    rbc = rebase --continue
    rbom = !git rebase origin/$(git main)
    rsom = !git reset --soft origin/$(git main)
    rs = reset --soft
    f = fetch
    prune = fetch --prune --all
    tp = !git tag -l | xargs git tag -d && git fetch -t
    b = branch
    ba = branch -a
    bd = branch -d
    bm = branch -m
    bclean = "!f(){ git branch | grep -v $(git main) | xargs git branch -D & git fetch --prune --all; }; f"
    l = pull
    lr = pull --rebase
    p = push
    pf = push -f
    pub = !git push -u origin $(git this)
    pubc = !git push -u origin $(git this) -o create.mr # publish branch and auto create merge request (Gitlab)
    unpub = !git push origin :$(git this)
    lol = log --graph --decorate --pretty=oneline --abbrev-commit
    lola = log --graph --decorate --pretty=oneline --abbrev-commit --all
    ls = log --oneline
    cp = "!f(){ git log --pretty=format:'%s' -1 | pbcopy; }; f"
	deploy = "!f(){ git subtree push --prefix $1 origin gh-pages; }; f"
    main = !git symbolic-ref refs/remotes/origin/HEAD | sed 's@^refs/remotes/origin/@@' # detect main branch of current repo
    this = rev-parse --abbrev-ref HEAD # current branch that you are on
    mru = "!git log -g -n 1000 --format=\"%gd %gs\" --date=relative HEAD@{now} | grep checkout | grep \" to\" | sed 's/HEAD@{\\(.*\\)}.* to\\(.*\\)/(\\1)\\t\\2/' | awk -v OFS=' ' '!x[$NF]++' | head -n 15 | column -ts $'\\t'"
    sync = "!f(){ git checkout $(git main) && git fetch upstream && git reset --hard upstream/$(git main) && git push; }; f"
[core]
    editor = vim
    pager = delta
[interactive]
    diffFilter = delta --color-only
[delta]
    navigate = true  # use n and N to move between diff sections
    dark = true      # or light = true, or omit for auto-detection
[pull]
	rebase = false
[push]
    default = current
    autoSetupRemote = true
[init]
	defaultBranch = main
[advice]
    skippedCherryPicks = false
[includeIf "gitdir:~/work/**"]
    path = ~/work/.gitconfig
